    if (nums[0] > target && nums[numsSize - 1] < target)
        return -1;
    if (numsSize == 1) {
        if (nums[0] == target)
            return 0;          
        else
            return -1;
    }
    if(numsSize==2)
    {
        if(nums[0]==target)
        return 0;
        else if(nums[1]==target)
        return 1;
        else 
        return -1;
    }

    int left = 0;
    int right = numsSize - 1;
    int t;
    while (left < right) {
        t = (left + right) / 2;
        if (nums[t] < nums[t - 1] && nums[t] < nums[t + 1])
            break;
        if (nums[t] > nums[numsSize - 1])
            left = t;
        else
            right = t;
    }
    if (target > nums[t]) {
        left = t;
        right = numsSize - 1;
    } else if (target == nums[t]) {
        return t;
    } else {
        left = 0;
        right = t;
    }
    while (left < right) {
        t = (left + right) / 2;
        if (nums[t] == target)
            break;
        if (nums[t] > target)
            left = t;
        else
            right = t;
    }
    return t;
}
